@*TO DO Prevent user for entreing not number in age fields*@
@model TellToAsk.Areas.LoggedUser.Models.QuestionModel

@{
    ViewBag.Title = "Ask question";
}

 @if (ViewBag.ShowConfirm as bool? == true)
    {
        <div class="alert alert-success success">
            <p>
                Question is submited and waiting for approvel. Please, keep in mind that you need @ViewBag.PointsForQuestion points to publish question.
            </p>
        </div>
    }

<legend>@ViewBag.Title</legend>

@using (Html.BeginForm("CreateQuestion", "LoggedUser"))
{    @Html.AntiForgeryToken()
    <div id="error-message" class="alert alert-error hidden">
        <p>
            <strong>Oh snap!</strong> Change a few things up and try submitting again.
        </p>
    </div>
            
    
        <input class="btn hidden  btn-info" onclick="hideForm()" type="button" id="target-group-button" value="Make it simple" />
        @Ajax.ActionLink("Target group", "RenderTargetGroupForm",
            null, new AjaxOptions
                  {
                      HttpMethod = "GET",
                      InsertionMode = InsertionMode.Replace,
                      UpdateTargetId = "target-question-form",
                      LoadingElementId = "loading",
                      OnSuccess = "showForm",
                      OnFailure = "showForm",
                  }, new { id = "ajax-button", @class = "btn btn-info" })


        <div class="control-group">
            @Html.LabelFor(model => model.QuestionTitle, new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(model => model.QuestionTitle, new { @class = "width100Pro", @rows = 1 })
                        @Html.ValidationMessageFor(model => model.QuestionTitle, null, new { @class = "help-inline" })
                        </div>
                    </div>
                
        <div class="control-group">
            @Html.LabelFor(model => model.QuestionText, new { @class = "control-label" })
            <div class="controls">
                @Html.TextAreaFor(model => model.QuestionText, new { @class = "width100Pro", @rows = 5 })
                @Html.ValidationMessageFor(model => model.QuestionText, null, new { @class = "help-inline" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.Categories)
                @Html.ValidationMessageFor(model => model.CategoryId, null, new { @class = "help-inline" })
            </div>
        </div>
         
        <div id="target-question-form" class="hidden">
            @Html.Partial("_TargetGroupForm")
        </div>
        <input type="submit" id="submit" class="btn btn-success" value="Ask" />
      
}
        
<div class="hidden" id="model-to-json">

    @if (@Model != null)
    {
        @Html.Raw(ViewBag.JsonModel)
    }

</div>
<script>
    
    $(document).ready(function () {
        var model = $("#model-to-json").html().trim();
        if (model) {
            console.log(model);
            var parsed = JSON.parse(model);
            showForm();
            $("#error-message").removeClass("hidden");
        }
    
        //// If cookie is set, scroll to the position saved in the cookie.
        //if ($.cookie("scroll") !== null) {
        //    $(document).scrollTop($.cookie("scroll"));
        //}
    
        //// When a button is clicked...
        //$('#submit').on("click", function () {
        //    // Set a cookie that holds the scroll position.
        //    $.cookie("scroll", $(document).scrollTop());
        //});
    });
    
    function showForm() {
        $("#ajax-button").addClass("hidden");
        $('#target-question-form').removeClass("hidden");
        $('#target-group-button').removeClass("hidden");
    }
    
    function hideForm(data) {
        $("#ajax-button").removeClass("hidden");
        $('#target-question-form').html("");
        $('#target-group-button').addClass("hidden");
    }
   
</script>
    
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/cookieExtension")
    
}

@section Styles {

    @Styles.Render("~/Content/kendoUI-client-side")
}
    
    
